import{_ as n,o as s,c as a,a as t}from"./app-d6f5df65.js";const e={},o=t(`<h1 id="text-font" tabindex="-1"><a class="header-anchor" href="#text-font" aria-hidden="true">#</a> Text&amp;Font</h1><h2 id="font字体" tabindex="-1"><a class="header-anchor" href="#font字体" aria-hidden="true">#</a> Font字体</h2><ul><li><p>创建字体<code>Font font1 = new Font(&quot;AdobeDevanagari-Regular&quot;, 25);</code></p></li><li><p>加载字体<code>Font font3 = Font.loadFont(&quot;file:E:\\\\Aria2\\\\Aria2Download\\\\POLYA.otf&quot;, 25);</code></p></li><li><p>设置字体样式<code>Font font4 = Font.font(&quot;Trebuchet MS&quot;, FontWeight.BLACK, FontPosture.ITALIC, 25);</code></p></li><li><p>获取系统中所有安装字体</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Font</span><span class="token punctuation">.</span><span class="token function">getFamilies</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;------------------------&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token class-name">Font</span><span class="token punctuation">.</span><span class="token function">getFontNames</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="text文本" tabindex="-1"><a class="header-anchor" href="#text文本" aria-hidden="true">#</a> Text文本</h2><ul><li><p>创建文本<code>Text text2 = new Text(&quot;Hello World&quot;);</code></p></li><li><p>设置字体<code>text.setFont(font);</code></p></li><li><p>填充颜色<code>text5.setFill(Color.RED);</code></p></li><li><p>描边颜色<code>text5.setStroke(Color.YELLOW);</code></p></li><li><p>描边宽度<code>text5.setStrokeWidth(3);</code></p></li><li><p>抗锯齿<code>text5.setSmooth(true);</code></p></li><li><p>下划线<code>text5.setUnderline(true);</code></p></li><li><p>删除线<code>text5.setStrikethrough(true);</code></p></li><li><p>字体平滑<code>text5.setFontSmoothingType(FontSmoothingType.LCD);</code></p></li><li><p>每行文本居中对齐<code>text6.setTextAlignment(TextAlignment.LEFT);</code></p></li><li><p>行间距<code>text6.setLineSpacing(10);</code></p></li><li><p>用像素限制宽度<code>text6.setWrappingWidth(30);</code></p></li><li><p>设置位置</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>text<span class="token punctuation">.</span><span class="token function">setX</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
text<span class="token punctuation">.</span><span class="token function">setY</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>四种位置对齐方式（不能共存，以最后一个设置为准）</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 位置对齐方式：以左上角为观测点计算坐标(X,Y)  </span>
text<span class="token punctuation">.</span><span class="token function">setTextOrigin</span><span class="token punctuation">(</span><span class="token class-name">VPos</span><span class="token punctuation">.</span><span class="token constant">TOP</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token comment">// 位置对齐方式：以中间为观测点计算坐标(X,Y)  </span>
text<span class="token punctuation">.</span><span class="token function">setTextOrigin</span><span class="token punctuation">(</span><span class="token class-name">VPos</span><span class="token punctuation">.</span><span class="token constant">CENTER</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token comment">// 位置对齐方式：以左下角为观测点计算坐标(X,Y)  </span>
text<span class="token punctuation">.</span><span class="token function">setTextOrigin</span><span class="token punctuation">(</span><span class="token class-name">VPos</span><span class="token punctuation">.</span><span class="token constant">BASELINE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token comment">// 位置对齐方式：以左下角为观测点计算坐标(X,Y)，相比上面一行文本会向上移动一点  </span>
text<span class="token punctuation">.</span><span class="token function">setTextOrigin</span><span class="token punctuation">(</span><span class="token class-name">VPos</span><span class="token punctuation">.</span><span class="token constant">BOTTOM</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul>`,5),p=[o];function c(i,l){return s(),a("div",null,p)}const d=n(e,[["render",c],["__file","lesson089.html.vue"]]);export{d as default};
