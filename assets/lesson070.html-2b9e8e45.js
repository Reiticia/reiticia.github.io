import{_ as n,o as a,c as s,a as e}from"./app-d6f5df65.js";const p={},t=e(`<h1 id="图片编辑" tabindex="-1"><a class="header-anchor" href="#图片编辑" aria-hidden="true">#</a> 图片编辑</h1><h2 id="基础编辑功能" tabindex="-1"><a class="header-anchor" href="#基础编辑功能" aria-hidden="true">#</a> 基础编辑功能</h2><ol><li><p>创建可编辑图片<code>WritableImage wi = new WritableImage(100, 100);</code></p></li><li><p>获取像素编辑器<code>PixelWriter pixelWriter = wi.getPixelWriter();</code></p></li><li><p>向每一个像素写入颜色，并在某些区域追加其他颜色</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">100</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">100</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
        pixelWriter<span class="token punctuation">.</span><span class="token function">setColor</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> j<span class="token punctuation">,</span> <span class="token class-name">Color</span><span class="token punctuation">.</span><span class="token constant">YELLOW</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token punctuation">}</span>  
<span class="token punctuation">}</span>  
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">100</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
    pixelWriter<span class="token punctuation">.</span><span class="token function">setColor</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token number">100</span> <span class="token operator">-</span> i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token class-name">Color</span><span class="token punctuation">.</span><span class="token constant">RED</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h2 id="传入图片的pixelreader对该图片进行编辑" tabindex="-1"><a class="header-anchor" href="#传入图片的pixelreader对该图片进行编辑" aria-hidden="true">#</a> 传入图片的PixelReader对该图片进行编辑</h2><ol><li><p>获取图片<code>Image image = new Image(&quot;file:E:\\\\Users\\\\86158\\\\图片\\\\110300202.jpg&quot;, 600, 600, true, true);</code></p></li><li><p>通过图片PixelReader创建可编辑图片</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 图片PixelReader，从(0,0)开始截取图片宽度，图片高度</span>
<span class="token class-name">WritableImage</span> wi1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WritableImage</span><span class="token punctuation">(</span>image<span class="token punctuation">.</span><span class="token function">getPixelReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">600</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> image<span class="token punctuation">.</span><span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>获取像素编辑器<code>PixelWriter pixelWriter1 = wi1.getPixelWriter();</code></p></li><li><p>向100*100的区域填充颜色</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">100</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">100</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
        pixelWriter1<span class="token punctuation">.</span><span class="token function">setColor</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> j<span class="token punctuation">,</span> <span class="token class-name">Color</span><span class="token punctuation">.</span><span class="token constant">YELLOW</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token punctuation">}</span>  
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h2 id="传入图片的pixelreader对该图片进行编辑-再通过另一张图片的像素点进行图片修改" tabindex="-1"><a class="header-anchor" href="#传入图片的pixelreader对该图片进行编辑-再通过另一张图片的像素点进行图片修改" aria-hidden="true">#</a> 传入图片的PixelReader对该图片进行编辑，再通过另一张图片的像素点进行图片修改</h2><ol><li><p>获取将被修改的图片<code>Image image1 = new Image(&quot;file:E:\\\\Users\\\\86158\\\\图片\\\\110300202.jpg&quot;, 600, 600, true, true);</code></p></li><li><p>通过图片PixelReader创建可编辑图片</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 图片PixelReader，从(0,0)开始截取图片宽度，图片高度</span>
<span class="token class-name">WritableImage</span> wi2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WritableImage</span><span class="token punctuation">(</span>image1<span class="token punctuation">.</span><span class="token function">getPixelReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">600</span> <span class="token operator">-</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> image1<span class="token punctuation">.</span><span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>获取像素编辑器<code>PixelWriter pixelWriter2 = wi1.getPixelWriter();</code></p></li><li><p>获取修改图片<code>Image data = new Image(&quot;images/empty.png&quot;);</code></p></li><li><p>获取修改图片的PixelReader<code>PixelReader pixelReader = data.getPixelReader();</code></p></li><li><p>将对应区域颜色进行覆盖</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">100</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">100</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
        <span class="token keyword">int</span> x <span class="token operator">=</span> pixelReader<span class="token punctuation">.</span><span class="token function">getArgb</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> j<span class="token punctuation">)</span><span class="token punctuation">;</span>  
        pixelWriter2<span class="token punctuation">.</span><span class="token function">setArgb</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> j<span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token punctuation">}</span>  
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h2 id="传入图片的pixelreader对该图片进行编辑-再通过另一张图片的像素点进行图片修改-使用getpixels和setpixels修改" tabindex="-1"><a class="header-anchor" href="#传入图片的pixelreader对该图片进行编辑-再通过另一张图片的像素点进行图片修改-使用getpixels和setpixels修改" aria-hidden="true">#</a> 传入图片的PixelReader对该图片进行编辑，再通过另一张图片的像素点进行图片修改，使用getPixels和setPixels修改</h2><p><strong>前四步与上一节相同</strong></p><ol><li><p>创建int类型argb的像素格式化工具<code>WritablePixelFormat&lt;IntBuffer&gt; pixelFormat = PixelFormat.getIntArgbPreInstance();</code></p></li><li><p>创建ints数组<code>int[] ints = new int[1920 / 2 * 1080];</code></p></li><li><p>填充数组<code>pixelReader1.getPixels(0, 0, 1920 / 2, 1080, pixelFormat, ints, 0, 1920 / 2);</code></p></li><li><p>写入像素颜色数据<code>pixelWriter3.setPixels(0, 0, 1920 / 2, 1080, pixelFormat, ints, 0, 1920 / 2);</code></p></li><li><p>（另一种写法）<code>pixelWriter3.setPixels(0, 0, 1920 / 2, 1080, pixelReader1, 400, 0);</code></p></li></ol><h2 id="保存图片" tabindex="-1"><a class="header-anchor" href="#保存图片" aria-hidden="true">#</a> 保存图片</h2><ol><li><p>将内存中的图片转换成缓冲图像<code>BufferedImage bufferedImage = SwingFXUtils.fromFXImage(wi3, null);</code></p></li><li><p>转写为图片文件<code>ImageIO.write(bufferedImage, &quot;png&quot;, new File(&quot;E:\\\\Code\\\\JavaFx\\\\Aimls-lesson-study\\\\lesson70\\\\resources\\\\images\\\\result.png&quot;));</code></p></li></ol><h2 id="节点的截图" tabindex="-1"><a class="header-anchor" href="#节点的截图" aria-hidden="true">#</a> 节点的截图</h2><ol><li><p>获取节点快照<code>WritableImage snapshot = iv.snapshot(null, null);</code></p></li><li><p>转换成缓冲图像<code>BufferedImage bufferedImage1 = SwingFXUtils.fromFXImage(snapshot, null);</code></p></li><li><p>转写为图片文件<code>ImageIO.write(bufferedImage1, &quot;png&quot;, new File(&quot;E:\\\\Code\\\\JavaFx\\\\Aimls-lesson-study\\\\lesson70\\\\resources\\\\images\\\\snapshot.png&quot;));</code></p></li></ol>`,14),o=[t];function l(i,c){return a(),s("div",null,o)}const r=n(p,[["render",l],["__file","lesson070.html.vue"]]);export{r as default};
