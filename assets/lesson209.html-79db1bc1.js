import{_ as n,o as s,c as a,a as e}from"./app-d6f5df65.js";const p={},t=e(`<h1 id="java11以模块化方式引入javafx" tabindex="-1"><a class="header-anchor" href="#java11以模块化方式引入javafx" aria-hidden="true">#</a> Java11以模块化方式引入JavaFX</h1><ol><li><p>添加JavaFX的jar包</p></li><li><p>编写<code>module-info.java</code></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">module</span> <span class="token namespace">lesson209</span><span class="token punctuation">{</span>  
 <span class="token comment">// 导出到xxx包下进行使用  </span>
 <span class="token keyword">exports</span> <span class="token namespace">com<span class="token punctuation">.</span>reine</span><span class="token punctuation">;</span>  
 <span class="token comment">// 引用外部包  </span>
 <span class="token keyword">requires</span> <span class="token namespace">javafx<span class="token punctuation">.</span>graphics</span><span class="token punctuation">;</span>  
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>启动类</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token keyword">extends</span> <span class="token class-name">Application</span> <span class="token punctuation">{</span>  
 <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>  
     <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;hello world!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
     <span class="token function">launch</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>  

 <span class="token annotation punctuation">@Override</span>  
 <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">start</span><span class="token punctuation">(</span><span class="token class-name">Stage</span> primaryStage<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>  
      primaryStage<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
 <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol>`,2),c=[t];function o(l,i){return s(),a("div",null,c)}const d=n(p,[["render",o],["__file","lesson209.html.vue"]]);export{d as default};
