import{_ as n,o as s,c as a,a as t}from"./app-d6f5df65.js";const p={},o=t(`<h1 id="listview过滤和排序" tabindex="-1"><a class="header-anchor" href="#listview过滤和排序" aria-hidden="true">#</a> ListView过滤和排序</h1><ul><li><p>过滤</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>textField<span class="token punctuation">.</span><span class="token function">textProperty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addListener</span><span class="token punctuation">(</span><span class="token punctuation">(</span>observable<span class="token punctuation">,</span> oldValue<span class="token punctuation">,</span> newValue<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>  
    <span class="token class-name">FilteredList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">DataPro</span><span class="token punctuation">&gt;</span></span> filtered <span class="token operator">=</span> observableList<span class="token punctuation">.</span><span class="token function">filtered</span><span class="token punctuation">(</span>dataPro <span class="token operator">-&gt;</span> dataPro<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>newValue<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    listView<span class="token punctuation">.</span><span class="token function">setItems</span><span class="token punctuation">(</span>filtered<span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>排序</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 升序</span>
asc<span class="token punctuation">.</span><span class="token function">setOnAction</span><span class="token punctuation">(</span>event <span class="token operator">-&gt;</span> <span class="token punctuation">{</span> 
    <span class="token comment">// 务必创建一个变量接收排序后的数据，以便恢复原数据</span>
    <span class="token class-name">SortedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">DataPro</span><span class="token punctuation">&gt;</span></span> sorted <span class="token operator">=</span> observableList<span class="token punctuation">.</span><span class="token function">sorted</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">Comparator</span><span class="token punctuation">.</span><span class="token function">comparingInt</span><span class="token punctuation">(</span><span class="token class-name">DataPro</span><span class="token operator">::</span><span class="token function">getAge</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    listView<span class="token punctuation">.</span><span class="token function">setItems</span><span class="token punctuation">(</span>sorted<span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token comment">// 不建议使用这种方式，这种方式会修改原来的数据</span>
    observableList<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">Comparator</span><span class="token punctuation">.</span><span class="token function">comparingInt</span><span class="token punctuation">(</span><span class="token class-name">DataPro</span><span class="token operator">::</span><span class="token function">getAge</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 降序</span>
desc<span class="token punctuation">.</span><span class="token function">setOnAction</span><span class="token punctuation">(</span>event <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>  
    <span class="token class-name">SortedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">DataPro</span><span class="token punctuation">&gt;</span></span> sorted <span class="token operator">=</span> observableList<span class="token punctuation">.</span><span class="token function">sorted</span><span class="token punctuation">(</span><span class="token punctuation">(</span>o1<span class="token punctuation">,</span> o2<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> o2<span class="token punctuation">.</span><span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> o1<span class="token punctuation">.</span><span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    listView<span class="token punctuation">.</span><span class="token function">setItems</span><span class="token punctuation">(</span>sorted<span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token comment">// 不建议使用这种方式，这种方式会修改原来的数据</span>
    observableList<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span>o1<span class="token punctuation">,</span> o2<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> o2<span class="token punctuation">.</span><span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> o1<span class="token punctuation">.</span><span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>复原</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>listView<span class="token punctuation">.</span><span class="token function">setItems</span><span class="token punctuation">(</span>observableList<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul>`,2),e=[o];function c(l,u){return s(),a("div",null,e)}const k=n(p,[["render",c],["__file","lesson087.html.vue"]]);export{k as default};
