import{_ as n,o as s,c as a,a as t}from"./app-d6f5df65.js";const e={},p=t(`<h1 id="鼠标事件-拖拽" tabindex="-1"><a class="header-anchor" href="#鼠标事件-拖拽" aria-hidden="true">#</a> 鼠标事件（拖拽）</h1><h2 id="鼠标拖拽" tabindex="-1"><a class="header-anchor" href="#鼠标拖拽" aria-hidden="true">#</a> 鼠标拖拽</h2><blockquote><p>在button1上点击(左中右键)后进行拖拽，拖拽区域没有限制</p></blockquote><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>button1<span class="token punctuation">.</span><span class="token function">setOnMouseDragged</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">EventHandler</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MouseEvent</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
    <span class="token annotation punctuation">@Override</span>  
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">handle</span><span class="token punctuation">(</span><span class="token class-name">MouseEvent</span> event<span class="token punctuation">)</span> <span class="token punctuation">{</span>  
        <span class="token comment">// System.out.println(&quot;鼠标拖拽，次数：&quot; + (++dragTime));  </span>
    <span class="token punctuation">}</span>  
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="鼠标拖拽-当鼠标指针移除组件时-事件不会被触发" tabindex="-1"><a class="header-anchor" href="#鼠标拖拽-当鼠标指针移除组件时-事件不会被触发" aria-hidden="true">#</a> 鼠标拖拽（当鼠标指针移除组件时，事件不会被触发）</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>button1<span class="token punctuation">.</span><span class="token function">setOnMouseDragOver</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">EventHandler</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MouseDragEvent</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
    <span class="token annotation punctuation">@Override</span>  
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">handle</span><span class="token punctuation">(</span><span class="token class-name">MouseDragEvent</span> event<span class="token punctuation">)</span> <span class="token punctuation">{</span>  
        <span class="token comment">// System.out.println(&quot;在组件内拖动，次数：&quot; + (++dragTime) );  </span>
    <span class="token punctuation">}</span>  
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="拖拽检测-每次按下鼠标按键进行拖动-会触发事件-直到松开按键重新按下才会重新监听" tabindex="-1"><a class="header-anchor" href="#拖拽检测-每次按下鼠标按键进行拖动-会触发事件-直到松开按键重新按下才会重新监听" aria-hidden="true">#</a> 拖拽检测（每次按下鼠标按键进行拖动，会触发事件，直到松开按键重新按下才会重新监听）</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>button1<span class="token punctuation">.</span><span class="token function">setOnDragDetected</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">EventHandler</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MouseEvent</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
    <span class="token annotation punctuation">@Override</span>  
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">handle</span><span class="token punctuation">(</span><span class="token class-name">MouseEvent</span> event<span class="token punctuation">)</span> <span class="token punctuation">{</span>  
        <span class="token comment">// 设置全套拖拽动作，以触发组件内鼠标拖拽事件、鼠标拖拽进入、鼠标拖拽退出、鼠标拖拽释放事件  </span>
        button1<span class="token punctuation">.</span><span class="token function">startFullDrag</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;拖拽检测，次数：&quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token operator">++</span>dragTime<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token punctuation">}</span>  
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="拖拽进入" tabindex="-1"><a class="header-anchor" href="#拖拽进入" aria-hidden="true">#</a> 拖拽进入</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>button1<span class="token punctuation">.</span><span class="token function">setOnMouseDragEntered</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">EventHandler</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MouseDragEvent</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
    <span class="token annotation punctuation">@Override</span>  
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">handle</span><span class="token punctuation">(</span><span class="token class-name">MouseDragEvent</span> event<span class="token punctuation">)</span> <span class="token punctuation">{</span>  
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;拖拽进入&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token punctuation">}</span>  
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="拖拽退出" tabindex="-1"><a class="header-anchor" href="#拖拽退出" aria-hidden="true">#</a> 拖拽退出</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>button1<span class="token punctuation">.</span><span class="token function">setOnMouseDragExited</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">EventHandler</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MouseDragEvent</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
    <span class="token annotation punctuation">@Override</span>  
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">handle</span><span class="token punctuation">(</span><span class="token class-name">MouseDragEvent</span> event<span class="token punctuation">)</span> <span class="token punctuation">{</span>  
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;拖拽退出&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token punctuation">}</span>  
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="拖拽释放" tabindex="-1"><a class="header-anchor" href="#拖拽释放" aria-hidden="true">#</a> 拖拽释放</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>button1<span class="token punctuation">.</span><span class="token function">setOnMouseDragReleased</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">EventHandler</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MouseDragEvent</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
    <span class="token annotation punctuation">@Override</span>  
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">handle</span><span class="token punctuation">(</span><span class="token class-name">MouseDragEvent</span> event<span class="token punctuation">)</span> <span class="token punctuation">{</span>  
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;拖拽释放&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token punctuation">}</span>  
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>证明：在button1上开始拖拽，一直拖拽到button2上，依此触发button1拖拽进入-&gt;button1拖拽退出-&gt;button2拖拽进入，但只给button1设置了完整拖拽动作</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>button2<span class="token punctuation">.</span><span class="token function">setOnMouseDragEntered</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">EventHandler</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MouseDragEvent</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
    <span class="token annotation punctuation">@Override</span>  
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">handle</span><span class="token punctuation">(</span><span class="token class-name">MouseDragEvent</span> event<span class="token punctuation">)</span> <span class="token punctuation">{</span>  
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;拖拽进入Button2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token comment">// System.out.println(&quot;event.getSource() = &quot; + event.getSource());  </span>
        <span class="token comment">// System.out.println(&quot;event.getTarget() = &quot; + event.getTarget());  </span>
    <span class="token punctuation">}</span>  
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="获取事件对象" tabindex="-1"><a class="header-anchor" href="#获取事件对象" aria-hidden="true">#</a> 获取事件对象</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 鼠标在button1上按下按键，拖拽至button2上</span>
button2<span class="token punctuation">.</span><span class="token function">setOnMouseDragReleased</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">EventHandler</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MouseDragEvent</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
    <span class="token annotation punctuation">@Override</span>  
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">handle</span><span class="token punctuation">(</span><span class="token class-name">MouseDragEvent</span> event<span class="token punctuation">)</span> <span class="token punctuation">{</span>  
        <span class="token comment">// 手势源  </span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;event.getGestureSource() = &quot;</span> <span class="token operator">+</span> event<span class="token punctuation">.</span><span class="token function">getGestureSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;event.getSource() = &quot;</span> <span class="token operator">+</span> event<span class="token punctuation">.</span><span class="token function">getSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;event.getTarget() = &quot;</span> <span class="token operator">+</span> event<span class="token punctuation">.</span><span class="token function">getTarget</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token punctuation">}</span>  
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>event.getGestureSource() = Button@45bb3769[styleClass=button]&#39;button1&#39;<br> event.getSource() = Button@65eadf18[styleClass=button]&#39;button2&#39;<br> event.getTarget() = Text[text=&quot;button2&quot;, x=0.0, y=0.0, alignment=LEFT, origin=BASELINE, boundsType=LOGICAL_VERTICAL_CENTER, font=Font[name=System Regular, family=System, style=Regular, size=15.0], fontSmoothingType=LCD, fill=0x333333ff]</p></blockquote>`,19),o=[p];function c(u,l){return s(),a("div",null,o)}const k=n(e,[["render",c],["__file","lesson074.html.vue"]]);export{k as default};
