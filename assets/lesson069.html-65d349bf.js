import{_ as n,o as s,c as a,a as p}from"./app-d6f5df65.js";const t={},e=p(`<h1 id="image的像素解析" tabindex="-1"><a class="header-anchor" href="#image的像素解析" aria-hidden="true">#</a> Image的像素解析</h1><ul><li><p>加载一张3*3像素的图片</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">String</span> path <span class="token operator">=</span> <span class="token string">&quot;images/rgb.png&quot;</span><span class="token punctuation">;</span>  
<span class="token class-name">Image</span> image <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Image</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>创建像素解析器</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">PixelReader</span> pixelReader <span class="token operator">=</span> image<span class="token punctuation">.</span><span class="token function">getPixelReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>十六进制转十进制<code>Integer.parseInt(&quot;ff&quot;, 16)</code></p></li><li><p>十进制转十六进制<code>Integer.toHexString(255)</code></p></li><li><p>像素解析器操作，通过<code>getArgb</code>获取某个像素点的argb</p><ol><li><p>解析位置(2,0)的像素<strong>返回16进制整数，格式为ARGB</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">int</span> argb <span class="token operator">=</span> pixelReader<span class="token punctuation">.</span><span class="token function">getArgb</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;argb = &quot;</span> <span class="token operator">+</span> argb<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>获取图片格式</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;pixelReader.getPixelFormat().getType() = &quot;</span> <span class="token operator">+</span> pixelReader<span class="token punctuation">.</span><span class="token function">getPixelFormat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>获取ARGB</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">int</span> alpha <span class="token operator">=</span> argb <span class="token operator">&gt;&gt;</span> <span class="token number">24</span> <span class="token operator">&amp;</span> <span class="token number">0xff</span><span class="token punctuation">;</span>  
<span class="token keyword">int</span> red <span class="token operator">=</span> argb <span class="token operator">&gt;&gt;</span> <span class="token number">16</span> <span class="token operator">&amp;</span> <span class="token number">0xff</span><span class="token punctuation">;</span>  
<span class="token keyword">int</span> green <span class="token operator">=</span> argb <span class="token operator">&gt;&gt;</span> <span class="token number">8</span> <span class="token operator">&amp;</span> <span class="token number">0xff</span><span class="token punctuation">;</span>  
<span class="token keyword">int</span> blue <span class="token operator">=</span> argb <span class="token operator">&amp;</span> <span class="token number">0xff</span><span class="token punctuation">;</span>  
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;alpha = &quot;</span> <span class="token operator">+</span> alpha<span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;red = &quot;</span> <span class="token operator">+</span> red<span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;green = &quot;</span> <span class="token operator">+</span> green<span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;blue = &quot;</span> <span class="token operator">+</span> blue<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>argb = -128758 pixelReader.getPixelFormat().getType() = BYTE_BGRA_PRE alpha = 255 red = 254 green = 9 blue = 10</p></blockquote></li></ol></li><li><p>像素解析器操作，通过<code>getColor</code>获取某个像素点的Color</p><ol><li><p>获取color</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Color</span> color <span class="token operator">=</span> pixelReader<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;color = &quot;</span> <span class="token operator">+</span> color<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// RGBA</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>获取RGBA</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;color.getOpacity() = &quot;</span> <span class="token operator">+</span> color<span class="token punctuation">.</span><span class="token function">getOpacity</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;color.getRed() = &quot;</span> <span class="token operator">+</span> color<span class="token punctuation">.</span><span class="token function">getRed</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;color.getGreen() = &quot;</span> <span class="token operator">+</span> color<span class="token punctuation">.</span><span class="token function">getGreen</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;color.getBlue() = &quot;</span> <span class="token operator">+</span> color<span class="token punctuation">.</span><span class="token function">getBlue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>color = 0xfe090aff color.getOpacity() = 255.0 color.getRed() = 254.00000005960464 color.getGreen() = 9.000000413507223 color.getBlue() = 10.000000353902578</p></blockquote></li></ol></li><li><p>像素解析器操作，通过<code>getPixels</code>获取所有像素点的argb，通过byte数组操作</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">WritablePixelFormat</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ByteBuffer</span><span class="token punctuation">&gt;</span></span> pixelFormat <span class="token operator">=</span> <span class="token class-name">PixelFormat</span><span class="token punctuation">.</span><span class="token function">getByteBgraPreInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token comment">// byte 8bit  </span>
<span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> bytes <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token number">3</span> <span class="token operator">*</span> <span class="token number">3</span> <span class="token operator">*</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  
<span class="token comment">/*  
x - 要读取的矩形区域的 X 坐标  
y - 要读取的矩形区域的 Y 坐标  
w - 要读取的矩形区域的宽度  
h - 要读取的矩形区域的高度  
pixelformat – PixelFormat&lt;ByteBuffer&gt;对象定义字节格式以将像素存储到缓冲区中  
buffer – 一个字节数组，用于存储返回的像素数据  
offset – buffer中用于存储第一个像素数据的偏移量  
scanlineStride – 缓冲区中一行数据开头的像素数据到下一行数据开头的距离  
*/</span>  
pixelReader<span class="token punctuation">.</span><span class="token function">getPixels</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> pixelFormat<span class="token punctuation">,</span> bytes<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">3</span> <span class="token operator">*</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token comment">// 每次4个字节，即32位，十六进制表示为(0x00000000 ~ 0xffffffff)，打印每个像素的argb值  </span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> bytes<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">+=</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
    <span class="token keyword">int</span> b <span class="token operator">=</span> bytes<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&amp;</span> <span class="token number">0xff</span><span class="token punctuation">;</span>  
    <span class="token keyword">int</span> g <span class="token operator">=</span> bytes<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">&amp;</span> <span class="token number">0xff</span><span class="token punctuation">;</span>  
    <span class="token keyword">int</span> r <span class="token operator">=</span> bytes<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">&amp;</span> <span class="token number">0xff</span><span class="token punctuation">;</span>  
    <span class="token keyword">int</span> a <span class="token operator">=</span> bytes<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">&amp;</span> <span class="token number">0xff</span><span class="token punctuation">;</span>  
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;A = %d, R = %d, G = %d, B = %d\\n&quot;</span><span class="token punctuation">,</span> a<span class="token punctuation">,</span> r<span class="token punctuation">,</span> g<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>A = 255, R = 8, G = 255, B = 8 A = 255, R = 18, G = 25, B = 248 A = 255, R = 254, G = 9, B = 10 A = 255, R = 27, G = 16, B = 243 A = 45, R = 45, G = 0, B = 0 A = 255, R = 7, G = 7, B = 255 A = 255, R = 254, G = 3, B = 4 A = 253, R = 49, G = 22, B = 226 A = 255, R = 10, G = 255, B = 10</p></blockquote></li><li><p>像素解析器操作，通过<code>getPixels</code>获取所有像素点的argb，通过int数组操作</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">WritablePixelFormat</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">IntBuffer</span><span class="token punctuation">&gt;</span></span> pixelFormat1 <span class="token operator">=</span> <span class="token class-name">PixelFormat</span><span class="token punctuation">.</span><span class="token function">getIntArgbPreInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token comment">// int 32bit  </span>
<span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> ints <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token number">3</span> <span class="token operator">*</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  
pixelReader<span class="token punctuation">.</span><span class="token function">getPixels</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> pixelFormat1<span class="token punctuation">,</span> ints<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token comment">//  </span>
<span class="token comment">// 十六进制表示为(0x00000000 ~ 0xffffffff)，打印每个像素的argb值  </span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> anInt <span class="token operator">:</span> ints<span class="token punctuation">)</span> <span class="token punctuation">{</span>  
    <span class="token comment">// int b = ints[i] &amp; 0xff000000;  </span>
    <span class="token comment">// int g = ints[i] &amp; 0x00ff0000;  </span>
    <span class="token comment">// int r = ints[i] &amp; 0x0000ff00;  </span>
    <span class="token comment">// int a = ints[i] &amp; 0x000000ff;  </span>
    <span class="token keyword">int</span> b <span class="token operator">=</span> <span class="token punctuation">(</span>anInt <span class="token operator">&amp;</span> <span class="token number">0xff</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token keyword">int</span> g <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>anInt <span class="token operator">&gt;&gt;</span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xff</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token keyword">int</span> r <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>anInt <span class="token operator">&gt;&gt;</span> <span class="token number">16</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xff</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>anInt <span class="token operator">&gt;&gt;</span> <span class="token number">24</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xff</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;该像素点上16位ARGB值 = 0x&quot;</span> <span class="token operator">+</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">toHexString</span><span class="token punctuation">(</span>anInt<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;A = %3d, R = %3d, G = %3d, B = %3d\\n&quot;</span><span class="token punctuation">,</span> a<span class="token punctuation">,</span> r<span class="token punctuation">,</span> g<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>该像素点上16位ARGB值 = 0xff08ff08 A = 255, R = 8, G = 255, B = 8 该像素点上16位ARGB值 = 0xff1219f8 A = 255, R = 18, G = 25, B = 248 该像素点上16位ARGB值 = 0xfffe090a A = 255, R = 254, G = 9, B = 10 该像素点上16位ARGB值 = 0xff1b10f3 A = 255, R = 27, G = 16, B = 243 该像素点上16位ARGB值 = 0x2d2d0000 A = 45, R = 45, G = 0, B = 0 该像素点上16位ARGB值 = 0xff0707ff A = 255, R = 7, G = 7, B = 255 该像素点上16位ARGB值 = 0xfffe0304 A = 255, R = 254, G = 3, B = 4 该像素点上16位ARGB值 = 0xfd3116e2 A = 253, R = 49, G = 22, B = 226 该像素点上16位ARGB值 = 0xff0aff0a A = 255, R = 10, G = 255, B = 10</p></blockquote></li></ul>`,2),o=[e];function c(l,u){return s(),a("div",null,o)}const r=n(t,[["render",c],["__file","lesson069.html.vue"]]);export{r as default};
