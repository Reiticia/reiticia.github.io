import{_ as n,o as s,c as a,a as t}from"./app-d6f5df65.js";const p={},e=t(`<h1 id="其他监视属性的绑定判断" tabindex="-1"><a class="header-anchor" href="#其他监视属性的绑定判断" aria-hidden="true">#</a> 其他监视属性的绑定判断</h1><ul><li><p>另一个构造器<code>SimpleIntegerProperty y = new SimpleIntegerProperty(student, &quot;stu&quot;, 10);</code></p></li><li><p>以下方法创建不能修改的监视属性<code>IntegerExpression n = SimpleIntegerProperty.integerExpression(y);</code></p></li><li><p>强制类型转换<code>SimpleIntegerProperty sip = (SimpleIntegerProperty) n;</code></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>x<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">90</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;n.get() = &quot;</span> <span class="token operator">+</span> n<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;((SimpleIntegerProperty) n).getBean() = &quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">SimpleIntegerProperty</span><span class="token punctuation">)</span> n<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;sip.getName().equals(y.getName()) = &quot;</span> <span class="token operator">+</span> sip<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>y<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>n.get() = 10 ((SimpleIntegerProperty) n).getBean() = Student{name=&#39;reine&#39;, age=18} sip.getName().equals(y.getName()) = true</p></blockquote></li><li><p>类型转换</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">ObjectProperty</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> objectProperty <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SimpleObjectProperty</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">IntegerExpression</span><span class="token punctuation">.</span><span class="token function">integerExpression</span><span class="token punctuation">(</span>objectProperty<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>2</p></blockquote></li><li><p>获取只读属性<code>SimpleIntegerProperty.readOnlyIntegerProperty(y);</code></p></li></ul><h2 id="布尔类型的监视属性" tabindex="-1"><a class="header-anchor" href="#布尔类型的监视属性" aria-hidden="true">#</a> 布尔类型的监视属性</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">SimpleBooleanProperty</span> b1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SimpleBooleanProperty</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token class-name">SimpleBooleanProperty</span> b2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SimpleBooleanProperty</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token comment">// 与或非  </span>
b1<span class="token punctuation">.</span><span class="token function">and</span><span class="token punctuation">(</span>b2<span class="token punctuation">)</span><span class="token punctuation">;</span>  
b1<span class="token punctuation">.</span><span class="token function">or</span><span class="token punctuation">(</span>b2<span class="token punctuation">)</span><span class="token punctuation">;</span>  
b1<span class="token punctuation">.</span><span class="token function">not</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
b1<span class="token punctuation">.</span><span class="token function">isEqualTo</span><span class="token punctuation">(</span>b2<span class="token punctuation">)</span><span class="token punctuation">;</span>  
b1<span class="token punctuation">.</span><span class="token function">isNotEqualTo</span><span class="token punctuation">(</span>b2<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="字符串类型的监视属性" tabindex="-1"><a class="header-anchor" href="#字符串类型的监视属性" aria-hidden="true">#</a> 字符串类型的监视属性</h2><ul><li><p>创建两个变量</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">SimpleStringProperty</span> up <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SimpleStringProperty</span><span class="token punctuation">(</span><span class="token string">&quot;ABC&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token class-name">SimpleStringProperty</span> low <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SimpleStringProperty</span><span class="token punctuation">(</span><span class="token string">&quot;abc&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>操作</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;up.lessThan(low).get() = &quot;</span> <span class="token operator">+</span> up<span class="token punctuation">.</span><span class="token function">lessThan</span><span class="token punctuation">(</span>low<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;up.concat(low).get() = &quot;</span> <span class="token operator">+</span> up<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>low<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;up.isEqualTo(low).get() = &quot;</span> <span class="token operator">+</span> up<span class="token punctuation">.</span><span class="token function">isEqualTo</span><span class="token punctuation">(</span>low<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;up.isEqualToIgnoreCase(low).get() = &quot;</span> <span class="token operator">+</span> up<span class="token punctuation">.</span><span class="token function">isEqualToIgnoreCase</span><span class="token punctuation">(</span>low<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
up<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;up.isEmpty().get() = &quot;</span> <span class="token operator">+</span> up<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true  </span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;up.isNull().get() = &quot;</span> <span class="token operator">+</span> up<span class="token punctuation">.</span><span class="token function">isNull</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>up.lessThan(low).get() = true up.concat(low).get() = ABCabc up.isEqualTo(low).get() = false up.isEqualToIgnoreCase(low).get() = true up.isEmpty().get() = true up.isNull().get() = false</p></blockquote></li></ul><h2 id="对象类型的监视属性" tabindex="-1"><a class="header-anchor" href="#对象类型的监视属性" aria-hidden="true">#</a> 对象类型的监视属性</h2><ul><li><p>创建属性<code>SimpleObjectProperty&lt;Student&gt; studentSimpleObjectProperty = new SimpleObjectProperty&lt;&gt;(student);</code></p></li><li><p>添加属性监听器</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>studentSimpleObjectProperty<span class="token punctuation">.</span><span class="token function">addListener</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>observable<span class="token punctuation">,</span> oldValue<span class="token punctuation">,</span> newValue<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>  
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;oldValue = &quot;</span> <span class="token operator">+</span> oldValue<span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;newValue = &quot;</span> <span class="token operator">+</span> newValue<span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>测试</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 触发监听器 </span>
studentSimpleObjectProperty<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token string">&quot;Jack&quot;</span><span class="token punctuation">,</span><span class="token number">82</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token comment">// 不触发监听器 </span>
student<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">&quot;Tom&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token comment">// 不触发监听器  </span>
studentSimpleObjectProperty<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setAge</span><span class="token punctuation">(</span><span class="token number">19</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;studentSimpleObjectProperty.isNull().get() = &quot;</span> <span class="token operator">+</span> studentSimpleObjectProperty<span class="token punctuation">.</span><span class="token function">isNull</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>oldValue = Student{name=&#39;reine&#39;, age=18} newValue = Student{name=&#39;Jack&#39;, age=82} studentSimpleObjectProperty.isNull().get() = false</p></blockquote></li></ul>`,8),o=[e];function c(u,l){return s(),a("div",null,o)}const k=n(p,[["render",c],["__file","lesson058.html.vue"]]);export{k as default};
